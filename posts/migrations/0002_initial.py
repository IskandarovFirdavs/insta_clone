# Generated by Django 5.2.1 on 2025-06-14 13:00

import address.models
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0003_auto_20200830_1851'),
        ('posts', '0001_initial'),
        ('users', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='commentlikemodel',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commentlikemodel',
            name='commentID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.commentmodel'),
        ),
        migrations.AddField(
            model_name='likemodel',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='musicmodel',
            name='singer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='users.singer'),
        ),
        migrations.AddField(
            model_name='postmodel',
            name='address',
            field=address.models.AddressField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='address.address'),
        ),
        migrations.AddField(
            model_name='postmodel',
            name='music',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.musicmodel'),
        ),
        migrations.AddField(
            model_name='postmodel',
            name='tagging',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='tagged_posts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='postmodel',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='likemodel',
            name='postID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.postmodel'),
        ),
        migrations.AddField(
            model_name='commentmodel',
            name='postID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.postmodel'),
        ),
        migrations.AddField(
            model_name='replycommentlikemodel',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='replycommentmodel',
            name='commentID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.commentmodel'),
        ),
        migrations.AddField(
            model_name='replycommentmodel',
            name='postID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='posts.postmodel'),
        ),
        migrations.AddField(
            model_name='replycommentmodel',
            name='userID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='replycommentlikemodel',
            name='reply_commentID',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='likes', to='posts.replycommentmodel'),
        ),
        migrations.AlterUniqueTogether(
            name='likemodel',
            unique_together={('postID', 'userID')},
        ),
    ]
